#include "tools/cmdutils.h"

const OptionDef options[] = { 
    CMDUTILS_COMMON_OPTIONS
    { "x", HAS_ARG, { .func_arg = opt_width }, "force display width", "width" },
    { "y", HAS_ARG, { .func_arg = opt_height }, "force display width", "height" },
    { "s", HAS_ARG|OPT_VIDEO, { .func_arg = opt_frame_size}, "set frame size (WxH or abbreviation)", "size" },
    { "fs",OPT_BOOl, {&is_full_screen}, "force full screen"},
    { "an",OPT_BOOl, {&audio_disable}, "disable audio"},
    { "vn",OPT_BOOl, {&video_disable}, "disable video"},
    { "sn",OPT_BOOl, {&subtitle_disable}, "disable subtitle"},
    { "ast",OPT_STRING|HAS_ARG|OPT_EXPERT, {&wanted_stream_spec[AVMEDIA_TYPE_AUDIO]}, "select disired audio stream", "stream_specifier"},
    { "vst",OPT_STRING|HAS_ARG|OPT_EXPERT, {&wanted_stream_spec[AVMEDIA_TYPE_VIDEO]}, "select disired video stream", "stream_specifier"},
    { "sst",OPT_STRING|HAS_ARG|OPT_EXPERT, {&wanted_stream_spec[AVMEDIA_TYPE_SUBTITLE]}, "select disired subtitle stream", "stream_specifier"},
    { "ss", HAS_ARG, { .func_arg = opt_seek }, "seek to given position in seconds", "pos" },
    { "t", HAS_ARG, { .func_arg = opt_duration}, "play \"duration\" seconds of audio/video", "duration" },
    { "bytes", OPT_INT|HAS_ARG, {&seek_by_bytes}, "seek by bytes 0==off 1=on -1=audio", "val" },
    { "seek_interval", OPT_FLOAT|HAS_ARG, {&seek_interval}, "set seek interval for left/right keys, in seconds", "seconds" },
    { "nodisp", OPT_BOOL, {&display_disable}, "disable graphical display"},
    { "noborder", OPT_BOOL, {&borderless}, "borderless window"},
    { "alwaysontop", OPT_BOOL, {&alwaysontop}, "window always on top"},
    { "volume",OPT_INT|HAS_ARG, {&startup_volume}, "set startup volume 0=min 100=max", "volume"},
    { "f",HAS_ARG, {.func_arg = opt_format}, "force format", "fmt"},
    { "pix_fmt",HAS_ARG|OPT_EXPERT|OPT_VIDEO, {.func_arg = opt_frame_pix_fmt}, "set pixel format", "format"},
    { "stats",OPT_BOOL|OPT_EXPERT, {&show_status}, "show status", ""},
    { "fast",OPT_BOOL|OPT_EXPERT, {&fast}, "non spec compliant optimizations", ""},
    { "genpts",OPT_BOOL|OPT_EXPERT, {&genpts}, "generate pts", ""},
    { "drp",OPT_INT|HAS_ARG|OPT_EXPERT, {&decoder_reorder_pts}, "let decoder reorder pts 0=off 1=on -1=auto", ""},
    { "lowres",OPT_INT|HAS_ARG|OPT_EXPERT, {&lowres}, "", ""},
    { "sync",HAS_ARG|OPT_EXPERT, {.func_arg = opt_sync}, "set audio-video sync. type(type=audio/video/ext)", "type"},
    { "autoexit",OPT_BOOL|OPT_EXPERT, {&autoexit}, "exit at the end", ""},
    { "exitonkeydown",OPT_BOOL|OPT_EXPERT, {&exit_on_keydown}, "exit on key down", ""},
    { "exitonmousedown",OPT_BOOL|OPT_EXPERT, {&exit_on_mousedown}, "exit on mouse down", ""},
    { "loop",OPT_INT|HAS_ARG|OPT_EXPERT, {&loop}, "set number of times the playback shall be looped", "loop count"},
    { "framedrop",OPT_BOOL|OPT_EXPERT, {&framedrop}, "drop frames when cpu is too slow", ""},
    { "infbuf",OPT_BOOL|OPT_EXPERT, {&infinate_buffer}, "don't limit the input buffer size (useful with realtime streams)", ""},
    { "window_title",OPT_STRING|HAS_ARG, {&window_title}, "set window title", "window title"},
    { "left",OPT_INT|HAS_ARG|OPT_EXPERT, {&screen_left}, "set the x position for the left of the window", "x pos"},
    { "top",OPT_INT|HAS_ARG|OPT_EXPERT, {&screen_top}, "set the y position for the top of the window", "y pos"},
#if CONIFG_AVFILTER
    { "vf",HAS_ARG|OPT_EXPERT, {.func_arg = opt_add_vfilter}, "set video filters", "filter_graph"},
    { "af",HAS_ARG|OPT_EXPERT, {&afilter}, "set audio filters", "filter_graph"},
#endif
    { "rdftspeed", OPT_INT|HAS_ARG|OPT_AUDIO|OPT_EXPERT, {&rdftspeed}, "rdft speed", "msecs"},
    { "showmode", HAS_ARG, {.func_arg = opt_show_mode}, "select show mode (0=video, 1 = waves, 2 = RDFT)", "mode"},
    { "default", HAS_ARG|OPT_AUDIO|OPT_VIDEO|OPT_EXPERT, {.func_arg = opt_default}, "generic catch all option", ""},
    { "i", OPT_BOOL, {&dummy}, "read specified file", "input_file"},
    { "codec",HAS_ARG, {.func_arg = opt_codec}, "force decoder", "decoder name"},
    { "acodec",HAS_ARG|OPT_STRING|OPT_EXPERT, {&audio_codec_name}, "force audio decoder", "decoder name"},
    { "scodec",HAS_ARG|OPT_STRING|OPT_EXPERT, {&subtitle_codec_name}, "force subtitle decoder", "decoder name"},
    { "vcodec",HAS_ARG|OPT_STRING|OPT_EXPERT, {&video_codec_name}, "force video decoder", "decoder name"},
    { "autorate",OPT_BOOL, {&autorate}, "automiatically rotate video", ""},
    { "find_stream_info",OPT_BOOL|OPT_INPUT|OPT_EXPERT, {&find_stream_info}, "read and decode the streams to fill missing information with heuristics"},
    { "filter_threads",HAS_ARG|OPT_INT|OPT_EXPERT, {&filter_nbthreads}, "number of filter threads per graph"},
    {NULL,},
};